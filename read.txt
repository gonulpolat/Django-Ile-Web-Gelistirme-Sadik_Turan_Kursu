Terminalden Veri Tabanına Kayıt Ekleme

1)
- python manage.py shell
- >>> from Courses.models import Course
- >>> kurs1 = Course(title='JavaScript Kursu', description="JavaScript (genellikle JS olarak kısaltılır), HTML ve CSS ile birlikte World Wide Web'in temel teknolojilerinden biri olan programlama dilidir. Web sitelerinin %97'sinden fazlası, web sayfası hareketleri için istemci tarafında JavaScript kullanırlar ve kullanılan kodlar genellikle üçüncü taraf kitaplıkları içerir. Tüm büyük web tarayıcılarında, kaynak kodunu kullanıcıların cihazlarında yürütebilmek için özel bir JavaScript motoru bulunur.", imageUrl="1.jpg", isActive=1, isUpdated=1)
- >>> kurs1.save()


2)
- python manage.py shell
- >>> from Courses.models import Course
- >>> Course.objects.create(title='JavaScript Kursu', description="JavaScript (genellikle JS olarak kısaltılır), HTML ve CSS ile birlikte World Wide Web'in temel teknolojilerinden biri olan programlama dilidir. Web sitelerinin %97'sinden fazlası, web sayfası hareketleri için istemci tarafında JavaScript kullanırlar ve kullanılan kodlar genellikle üçüncü taraf kitaplıkları içerir. Tüm büyük web tarayıcılarında, kaynak kodunu kullanıcıların cihazlarında yürütebilmek için özel bir JavaScript motoru bulunur.", imageUrl="1.jpg", isActive=1, isUpdated=1)


Termainalden Veri Tabanındaki Kayıtları Sorgulama

- python manage.py shell
- >>> from Courses.models import Course
- >>> Course.objects.all()                                      => <QuerySet [<Course: Course object (1)>, <Course: Course object (2)>, <Course: Course object (3)>]>
- >>> Course.objects.all()[0].title                             => 'JavaScript Kursu'
- >>> Course.objects.get(pk=1).title                            => 'JavaScript Kursu'


Terminalden Veri Tabanındaki Kayıtları Filtreleme

- python manage.py shell
- >>> from Courses.models import Course
- >>> Course.objects.filter(isActive=1)                         => <QuerySet [<Course: JavaScript Kursu>, <Course: Python Kursu>, <Course: Python Kursu>]>
- >>> Course.objects.filter(date__lte = '2024-12-12')           => <QuerySet [<Course: JavaScript Kursu>, <Course: Python Kursu>]>
- >>> Course.objects.filter(title__exact="javascript kursu")    => <QuerySet []>
- >>> Course.objects.filter(title__iexact="javascript kursu")   => <QuerySet [<Course: JavaScript Kursu>]>
- >>> Course.objects.filter(title__contains="kurs")             => <QuerySet [<Course: JavaScript Kursu>, <Course: Python Kursu>, <Course: Python Kursu>]>


Terminalden Veri Tabanındaki Kayıtları Mantıksal Operatörler İle Filtreleme

1) and operatör
- python manage.py shell
- >>> from Courses.models import Course
- >>> Course.objects.filter(title__contains='kurs', isActive=1)

2) or operatör
- python manage.py shell
- >>> from Courses.models import Course
- >>> >>> Course.objects.filter(Q(title__contains='kurs') | Q(isActive=1))


Terminalden Sonradan Eklenen Slug Alanını Doldurma

- python manage.py shell
- >>> from Courses.models import Course
- >>> Course.objects.get(pk=1).save()
- >>> ..


Termainalden Veri Tabanındaki Kayıtları Güncelleme (Tek Kayıt)

- python manage.py shell
- >>> from Courses.models import Course
- >>> kurs1 = Course.objects.get(pk=1)
- >>> kurs1.title = "Javascript Kursu"
- >>> kurs1.save()


Termainalden Veri Tabanındaki Kayıtları Güncelleme  (Birden Fazla Kayıt)

- python manage.py shell
- >>> from Courses.models import Course
- >>> kurslar = Course.objects.filter(isActive=0)
- >>> kurslar.update(isActive=1)


Termainalden Veri Tabanındaki Kayıtları Silme

- python manage.py shell
- >>> from Courses.models import Course
- >>> kurs1 = Course.objects.get(pk=1)
- >>> kurs1.delete()
